# –ú–Ω–æ–∂–∏–Ω–Ω–∞ —Ä–µ–≥—Ä–µ—Å—ñ—è
from colorama import Fore
import numpy as np
from sklearn.linear_model import LinearRegression

print(f"9-–π –≤–∞—Ä—ñ–∞–Ω—Ç")

# print("–í–≤–æ–¥–∏–º–æ –¥–∞–Ω—ñ")
y = [70.1, 71.3, 75, 80.1, 81.2, 85.6, 90, 90.5, 94.6, 95, 100.2, 106.8,
     109.3, 112.3, 120.8, 125.7, 124.2]

x = [
    [56.2, 1.85], [58.6, 2.35], [60, 2.5], [64.2, 2.6], [66.2, 2.6],
    [68.3, 2.9], [69, 2.85], [72.1, 3.1], [74.3, 3.3], [75.5, 2.95],
    [74.5, 3.25], [76.6, 3.4], [79.8, 3.15], [77.7, 3.55], [5.00, 47.84],
    [80.2, 3.56], [79.2, 3.65], [81.2, 4]
]
x, y = np.array(x), np.array(y)

# print("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∞–º–æ—ó –º–æ–¥–µ–ª—ñ:")
model = LinearRegression().fit(x, y)
print(model)

# print("–û—Ç—Ä–∏–º–∞—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏:")
# R¬≤ = (score)
# round(), 4 –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è
r_sq = round(model.score(x, y), 4)
print(f"–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –¥–µ—Ç–µ—Ä–º—ñ–Ω–∞—Ü—ñ—ó (ùëÖ¬≤): {r_sq}")

print(f"intercept (a, ùëè‚ÇÄ): {round(model.intercept_, 4)}")
print(f"slope (b, ùëè‚ÇÅ): {model.coef_}")

# print("–ü—Ä–æ–≥–Ω–æ–∑—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å")
# g(xi) –∑–∞–¥—è–∫–∏ —Ñ—É–Ω–∫—Ü—ñ—ó Python
y_pred = model.predict(x)
print(f"predicted response (g(xi)): \n{y_pred}")

# g(xi) –ø–æ —Ñ–æ—Ä–º—É–ª—ñ
y_pred = model.intercept_ + model.coef_ * x
print(f"predicted response (g(xi)):\n{y_pred}")

# –º–æ–¥–µ–ª—å –¥–ª—è –Ω–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
x_new = np.arange(10).reshape((-1, 2))
print(x_new)
y_new = model.predict(x_new)
print(y_new)

print(Fore.MAGENTA + f"–í–∏—Å–Ω–æ–≤–∫–∏:"
                     f"\n (ùëÖ¬≤): {r_sq},"
                     f"\n (a, ùëè‚ÇÄ): {round(model.intercept_, 4)},"
                     f"\n (b, ùëè‚ÇÅ): {model.coef_}")
